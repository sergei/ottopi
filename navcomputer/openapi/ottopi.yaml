openapi: 3.0.0

servers:
  - description: localhost
    url: http://localhost:5555

info:
  description: APIs to interact with Otto Pi
  version: "1.0.3"
  title: Otto Pi API
  contact:
    email: spodshivalov@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

tags:
  - name: nav
    description: Navigation data REST APIs
  - name: web
    description: Paths to acess the builtin Web site
  - name: autopilot
    description: Autopilot control REST APIs
  - name: timer
    description: Start timer REST APIs
  - name: bluetooth
    description: APIs to manage bluetooth devices

paths:
########################################################################################################################
#  Static web page hosting REACT app
########################################################################################################################
  /ottopi:
    get:
      operationId: rest_api.root_page
      tags:
        - web
      summary: Serves index.html of React app
      description: Serves index.html of React app
      responses:
        '200':
          description: Successfully loaded html page.
          content:
            text/html:   # Add the media type here
              schema:
                type: string

########################################################################################################################
#  Static web page hosting REACT app
########################################################################################################################
  /ottopi/{name}:
    get:
      operationId: rest_api.static_page
      tags:
        - web
      summary: Serves React app
      description: Serves React app
      parameters:
        - in: path
          name: name
          schema:
            type: string
            format: path
          required: false
          description: url path
      responses:
        '200':
          description: Successfully loaded html page.
          content:
            text/html:   # Add the media type here
              schema:
                type: string

########################################################################################################################
#  /navigation
########################################################################################################################
  /instr:
    get:
      operationId: rest_api.get_raw_instr
      tags:
        - nav
      summary: Get raw instrument data
      description: Get raw instrument data
      responses:
        '200':
          description: Raw instrument data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RawInstrData'

  /dest:
    get:
      operationId: rest_api.get_dest
      tags:
        - nav
      summary: Get destination information
      description: Get destination information
      responses:
        '200':
          description: Destination information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestInfo'

  /history:
    get:
      operationId: rest_api.get_history
      tags:
        - nav
      summary: Get historical data
      description: Get historical data
      responses:
        '200':
          description: Historical data
          content:
            application/json:
              schema:
                description: History
                type: array
                items:
                  $ref: '#/components/schemas/HistoryItem'

  /wpts:
    get:
      operationId: rest_api.get_wpts
      tags:
        - nav
      summary: Get list of waypoints
      description: Get list of waypoints
      responses:
        '200':
          description: List of waypoints
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WayPoints'

  /routes:
    get:
      operationId: rest_api.get_routes
      tags:
        - nav
      summary: Get list of routes
      description: Get list of routes
      responses:
        '200':
          description: List of routes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Routes'

  /logs:
    get:
      operationId: rest_api.get_logs
      tags:
        - nav
      summary: Get list of log files
      description: Get list of log files
      responses:
        '200':
          description: List of log files
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string

  /log/{name}:
    get:
      operationId: rest_api.get_log
      tags:
        - nav
      summary: Download log file
      description: Download log files
      parameters:
        - in: path
          name: name
          schema:
            type: string
            format: path
          required: true
          description: log name
      responses:
        '200':
          description: Log file
          content:
            octet/binary:
              schema:
                type: string
                format: binary

  /all_logs.zip:
    get:
      operationId: rest_api.zip_all_logs
      tags:
        - nav
      summary: Download all log files in one zip
      description: Download all log files in one zip
      responses:
        '200':
          description: ZIP file
          content:
            octet/binary:
              schema:
                type: string
                format: binary

  /goto_wpt:
    post:
      operationId: rest_api.goto_wpt
      tags:
        - nav
      summary: Set destination WPT
      description: Set destination WPT
      requestBody:
        description: Destination WPT
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Waypoint'
      responses:
        '200':
          description: Successfully set
          content:
            text/html:
              schema:
                type: string

  /select_route:
    post:
      operationId: rest_api.select_route
      tags:
        - nav
      summary: Sail this route
      description: Sail this route
      requestBody:
        description: Sail this route
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Route'
      responses:
        '200':
          description: Successfully selected
          content:
            text/html:
              schema:
                type: string

  /polars:
    post:
      operationId: rest_api.polars_upload
      tags:
        - nav
      summary: Uplaod file containing polras data
      description: Uplaod file containing polras data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fileName:
                  type: string
                  format: binary
      responses:
        '200':
          description: Successfull upload
          content:
            text/html:   # Add the media type here
              schema:
                type: string

  /gpx:
    post:
      operationId: rest_api.gpx_upload
      tags:
        - nav
      summary: Upload GPX file containing routes and waypoints
      description:  Upload GPX file containing routes and waypoints
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fileName:
                  type: string
                  format: binary
      responses:
        '200':
          description: Successfully loaded html page.
          content:
            text/html:   # Add the media type here
              schema:
                type: string

  /sw_update:
    post:
      operationId: rest_api.sw_update
      tags:
        - nav
      summary: Upload update package
      description:  Upload update package
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fileName:
                  type: string
                  format: binary
      responses:
        '200':
          description: Successfully loaded html page.
          content:
            text/html:   # Add the media type here
              schema:
                type: string

  /announce_current_route:
    post:
      operationId: rest_api.announce_current_route
      tags:
        - nav
      summary: Announce current route and waypoint
      description: Announce current route and waypoint
      responses:
        '200':
          description: Command accepted
          content:
            text/html:
              schema:
                type: string

  /clear_dest:
    post:
      operationId: rest_api.clear_dest
      tags:
        - nav
      summary: Clears current destination
      description: Clears current destination
      responses:
        '200':
          description: Command accepted
          content:
            text/html:
              schema:
                type: string


########################################################################################################################
#  /autopilot
########################################################################################################################
#  /autopilot/engage:
#  /autopilot/steer:
  /autopilot/tack:
    post:
      operationId: rest_api.tack
      tags:
        - autopilot
      summary: Instruct autopilot to tack
      description: Instruct autopilot to tack (or gybe if going downwind)
      responses:
        '200':
          description: Command accepted
          content:
            text/html:
              schema:
                type: string

  /autopilot/steer/{degrees}:
    post:
      operationId: rest_api.steer
      tags:
        - autopilot
      summary: Instruct autopilot to change course
      description: Instruct autopilot to change course by amount degrees specified in parameters
      parameters:
        - in: path
          name: degrees
          schema:
            type: string
          required: true
          description: Amount of degrees to change course (negative left positive right)
      responses:
        '200':
          description: Command accepted
          content:
            text/html:
              schema:
                type: string

########################################################################################################################
#  /timer
########################################################################################################################
  /timer/start:
    post:
      operationId: rest_api.timer_start
      tags:
        - timer
      summary: Start timer
      description: Start timer
      responses:
        '200':
          description: Command accepted
          content:
            text/html:
              schema:
                type: string

  /timer/stop:
    post:
      operationId: rest_api.timer_stop
      tags:
        - timer
      summary: Stop timer
      description: Stop timer
      responses:
        '200':
          description: Command accepted
          content:
            text/html:
              schema:
                type: string

  /timer/sync:
    post:
      operationId: rest_api.timer_sync
      tags:
        - timer
      summary: Sync timer
      description: Sync timer to the nearest integer minute
      responses:
        '200':
          description: Command accepted
          content:
            text/html:
              schema:
                type: string

  /timer/data:
    get:
      operationId: rest_api.timer_get_data
      tags:
        - timer
      summary: Timer data
      description: Timer data
      responses:
        '200':
          description: Timer data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimerData'

  /timer/phrf_table:
    post:
      operationId: rest_api.timer_phrf_upload
      tags:
        - timer
      summary: Upload PHRF table
      description:  Upload PHRF table in CSV format "name,phrf rating"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fileName:
                  type: string
                  format: binary
      responses:
        '200':
          description: Successfully loaded html page.
          content:
            text/html:   # Add the media type here
              schema:
                type: string


########################################################################################################################
#  /bluetooth
########################################################################################################################
  /bluetooth/devices:
    get:
      operationId: rest_api.get_bt_devices
      tags:
        - bluetooth
      summary: List bluetooth devices
      description: List bluetooth devices
      responses:
        '200':
          description: Bluetooth devices
          content:
            application/json:
              schema:
                description: List of bluetooth devices
                type: array
                items:
                  $ref: '#/components/schemas/BluetoothDevice'


  /bluetooth/pair:
    post:
      operationId: rest_api.pair_bt_device
      tags:
        - bluetooth
      summary: Pair with BT device
      description: Pair with BT device
      requestBody:
        description: Pair with BT device
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BtPairingInfo'
      responses:
        '200':
          description: Successfully selected
          content:
            text/html:
              schema:
                type: string

  /bluetooth/unpair/{bd_addr}:
    delete:
      operationId: rest_api.unpair_bt_device
      tags:
        - bluetooth
      summary: Unpair bluetooth device
      description: Unpair bluetooth device
      parameters:
        - in: path
          name: bd_addr
          schema:
            type: string
          required: true
          description: BD address
      responses:
        '200':
          description: Command accepted
          content:
            text/html:
              schema:
                type: string


########################################################################################################################
# Components
########################################################################################################################
components:
  schemas:

    Routes:
      type: object
      required:
        - wpts
      properties:
        wpts:
          description: List of routes
          type: array
          items:
            $ref: '#/components/schemas/Route'

    Route:
      type: object
      required:
        - name
        - wpts
      properties:
        name:
          description: Route name
          type: string
        active:
          description: This route is currently active
          type: boolean
        active_wpt_idx:
          description: Index of waypoint we are currently naviagtion to (zero based)
          type: integer
        wpts:
          description: List of waypoints
          type: array
          items:
            $ref: '#/components/schemas/Waypoint'

    WayPoints:
      type: object
      required:
        - wpts
      properties:
        wpts:
          description: List of waypoints
          type: array
          items:
            $ref: '#/components/schemas/Waypoint'

    Waypoint:
      description: Waypoint
      type: object
      required:
        - name
        - lat
        - lon
      properties:
        name:
          description: Waypoint name
          type: string
        lat:
          description: Degrees of latitude
          minimum: -90
          maximum: 90
          type: number
        lon:
          description: Degrees of longitude
          minimum: -180
          maximum: 180
          type: number
        active:
          description: We are navigating to this waypoint
          type: boolean

    RawInstrData:
      description: Raw Instruments Data
      type: object
      required:
        - utc
      properties:
        utc:
          description: UTC time stamp
          type: string
        lat:
          description: Latitude (degrees)
          minimum: -90
          maximum: 90
          type: number
        lon:
          description: Longitude (degrees)
          minimum: -180
          maximum: 180
          type: number
        awa:
          description: Apparent Wind Angle (degrees)
          minimum: -180
          maximum: 180
          type: number
        aws:
          description: Apparent Wind Speed (knots)
          minimum: 0
          maximum: 100
          type: number
        twa:
          description: True Wind Angle (degrees)
          minimum: -180
          maximum: 180
          type: number
        tws:
          description: True Wind Speed (knots)
          minimum: 0
          maximum: 100
          type: number
        sow:
          description: Speed over water (knots)
          minimum: 0
          maximum: 100
          type: number
        sog:
          description: Speed over ground (knots)
          minimum: 0
          maximum: 100
          type: number
        hdg:
          description: Boat heading (magnetic degrees)
          minimum: 0
          maximum: 359
          type: number
        cog:
          description: Course over ground (magnetic degrees)
          minimum: 0
          maximum: 359
          type: number

    DestInfo:
      description: Destination information
      type: object
      properties:
        name:
          description: Name of destination waypoint
          type: string
        dtw:
          description: Distance to wpt ( nautical miles)
          type: number
        btw:
          description: Bearing to waypoint (magnetic degrees)
          minimum: 0
          maximum: 360
          type: number
        atw:
          description: Angle to waypoint [-180;+180] (negative mark is to the left, positive mark is to the right)
          minimum: -180
          maximum: 180
          type: number
        atw_up:
          description: If mark is up or down relative to the wind direction (True - Up, False  - Down)
          type: boolean

    HistoryItem:
      description: History item
      type: object
      properties:
        utc:
          description: Time UTC
          type: string
          format: date-time
        hdg:
          description: Average heading (magnetic degrees)
          minimum: 0
          maximum: 360
          type: number
        twa:
          description: Average true wind angle
          minimum: -180
          maximum: 180
          type: number

    TimerData:
      type: object
      properties:
        is_running:
          description: If timer is running
          type: boolean
        elapsed_time:
          description: Elapsed time in seconds ( if it's a time to start)
          type: integer
        phrf_timers:
          description: Corrected PHRF times
          type: array
          items:
            type: object
            required:
              - name
              - phrf_rating
            properties:
              name:
                description: Class name
                type: string
              phrf_rating:
                description: PHRF rating
                type: integer
              corrected_time:
                description: Corrected time in seconds
                type: integer

    BluetoothDevice:
      description: Bluetooth Device
      type: object
      required:
        - bd_addr
      properties:
        bd_addr:
          description: Address
          type: string
        name:
          description: Manufacturer assigned name
          type: string
        is_paired:
          description: If device is paired
          type: boolean
        is_connected:
          description: If device is paired
          type: boolean
        function:
          description: Device function
          type: string
          enum: [route, timer, autopilot]

    BtPairingInfo:
      description: Pairing information for Bluetooth Device
      type: object
      required:
        - bd_addr
      properties:
        bd_addr:
          description: Address
          type: string
        function:
          description: Device function
          type: string
          enum: [route, timer, autopilot]
